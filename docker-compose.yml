version: '3.2'

services:

  nginx:
    build: ./nginx
    restart: always
    depends_on:
      - api
    ports:
      - 8001:8001
    expose:
      - "8001"
    networks:
      - nginx-network

  api:
    tty: true
    build:
      context: .
      args:
        requirements: requirements/production.txt
    container_name: api-dd
    environment:
      - SETTINGS_FILE=prod.yml
      - PYTHONPATH=/app
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error}]
    restart: always
    volumes:
      - .:/app:cached
    depends_on:
      - redis
      - rabbitmq
    entrypoint: "gunicorn api.app:app -b 0.0.0.0:8000 --worker-class aiohttp.GunicornUVLoopWebWorker"
    ports:
      - 8000:8000
    networks:
      - nginx-network
      - redis-network
      - rabbitmq-network

  redis:
    image: redis:4
    ports:
        - 6379
    networks:
      - redis-network
    logging:
      driver: none

  rabbitmq:
    image: rabbitmq
    command: rabbitmq-server
    expose:
      - 5672
      - 15672
    ports:
      - 5672
      - 15672
    networks:
      - rabbitmq-network
    logging:
      driver: none

networks:
    redis-network:
      driver: bridge
    rabbitmq-network:
      driver: bridge
    nginx-network:
      driver: bridge